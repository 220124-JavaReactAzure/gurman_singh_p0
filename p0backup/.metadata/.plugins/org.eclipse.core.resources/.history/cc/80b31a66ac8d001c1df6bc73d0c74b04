package com.revature.course_reg.services;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import com.revature.course_reg.models.Student;
import com.revature.course_reg.daos.StudentDAO;
import com.revature.course_reg.exceptions.InvalidRequestException;

public class StudentServiceTestSuite {

	StudentService sut;
	
	@Before
	public void testPrep() {
		StudentDAO studentDAO = new StudentDAO();
		sut = new StudentService(studentDAO);
	}
	
	@Test
	public void test_isStudentValid_returnsTrue_givenValidUser() {
		
		// Arrange
		Student validStudent = new Student("valid","valid","valid","valid","valid", "valid",false);
		
		// Act
		boolean actualResult = sut.isStudentValid(validStudent);
		
		// Assert
		Assert.assertTrue(actualResult);
		
	}
	
	@Test
	public void test_isStudentValid_returnsFalse_givenUserWithFirstName() {
		
		// Arrange
		Student invalidStudent1 = new Student("","valid","valid","valid","valid","valid",false);
		Student invalidStudent2 = new Student(null,"valid","valid","valid","valid","valid",false);
		Student invalidStudent3 = new Student("          ","valid","valid","valid","valid","valid",false);
		
		// Act
		boolean actualResult1 = sut.isStudentValid(invalidStudent1);
		boolean actualResult2 = sut.isStudentValid(invalidStudent2);
		boolean actualResult3 = sut.isStudentValid(invalidStudent3);
		
		// Assert
		Assert.assertFalse(actualResult1);
		Assert.assertFalse(actualResult2);
		Assert.assertFalse(actualResult3);
		
	}
	
	@Test
	public void test_registerStudent_returnsTrue_givenValidScientist() {
		
		// Arrange
		Student validStudent = new Student("valid", "valid", "valid", "valid", "valid");
		
		// Act
		Student actualResult = sut.registerNewStudent(validStudent);
		
		// Assert
		Assert.assertNotNull(actualResult);
	}
	
	@Test(expected = InvalidRequestException.class)
	public void test_registerStudent_throwsInvalidRequestException_givenInvalidUser() {
		
		sut.registerNewStudent(null);
		
	}
	
}