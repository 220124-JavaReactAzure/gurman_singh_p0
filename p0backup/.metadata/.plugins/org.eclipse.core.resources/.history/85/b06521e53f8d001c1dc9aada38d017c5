package com.revature.course_reg.services;

import com.revature.course_reg.daos.CourseDAO;
import com.revature.course_reg.exceptions.InvalidRequestException;
import com.revature.course_reg.models.Course;
import com.revature.course_reg.util.List;

public class CourseService {

	private final CourseDAO courseDAO;
	private final StudentService studentService;
	
	public CourseService(CourseDAO courseDAO, StudentService studentService) {
		this.courseDAO = courseDAO;
		this.studentService = studentService;
	}
	
	
	public void createCourse(Course newCourse) {
		if(!isCourseValid(newCourse)) {
			throw new InvalidRequestException("The course was provided invalid information");
		}
		
		newCourse.setCreator(studentService.getSessionStudent());
		Course createdCourse = courseDAO.create(newCourse);
		
		if(createdCourse == null) {
			throw new RousecePersistenceException("The course could not be persisted");
		}
		
		
	}
	
	private boolean isCourseValid(Course newCourse) {

		if (newCourse == null)
			return false;
		return (newCourse.getCourseName() == null || newCourse.getCourseName().trim().equals(""));
	}
	
	public List<Course> findMyCourses(){
		return null;
	}
	
	public List<Course> findAllCourses() {
		return null;
	}
}
